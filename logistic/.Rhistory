totalT <- 1200
params = c(S1=1000, S2=1000, s1=2000, s2=2000, b1=0.1, b2=0.1, I12=10000, I21=10000, m=0.9, c1=50, c2=150, C1=50, C2=50, bp=1, Kp=300, a=0.003)
results <- data.frame(dose=seq(50,700,1), T2=0)
for (i in 1:nrow(results)) {
litT2 <- 0
bigT2 <- totalT
midT2 <- totalT/2
print(i)
P1 = ode(y=c(T1=totalT-litT2,T2=litT2,P=results$dose[i]), times=seq(0,100), full_model,params)[101,4]
P2 = ode(y=c(T1=totalT-midT2,T2=midT2,P=results$dose[i]), times=seq(0,100), full_model,params)[101,4]
P3 = ode(y=c(T1=totalT-bigT2,T2=bigT2,P=results$dose[i]), times=seq(0,100), full_model,params)[101,4]
if(sum(round(c(P1,P2,P3)))==0)
results[i,"T2"] <- 0
else if(all(c(P1,P2,P3) > 10))
results[i,"T2"] <- results$totalT[i]
else {
while(bigT2-midT2 > 1) {
if(round(abs(P1-P2)) > round(abs(P2-P3))) { ## acute to chronic switch happens in the first interval
## litT2 stays the same and bigT2 becomes midT2 =>
## P1 remains the same and P3 becomes P2
bigT2 <- midT2
P3 <- P2
## midT2 is halfway between litT2 and bigT2
midT2 <- (bigT2+litT2)/2
P2 <- ode(y=c(T1=totalT-midT2,T2=midT2,P=results$dose[i]), times=seq(0,100), full_model,params)[101,4]
} else {
## bigT2 stays the same and litT2 becomes midT2 =>
## P3 remains the same and P1 becomes P2
litT2 <- midT2
P1 <- P2
## midT2 is halfway between litT2 and bigT2
midT2 <- (bigT2+litT2)/2
P2 <- ode(y=c(T1=totalT-midT2,T2=midT2,P=results$dose[i]), times=seq(0,100), full_model,params)[101,4]
}
}
results[i,"T2"] <- midT2
}
}
totalT <- 1200
params = c(S1=1000, S2=1000, s1=2000, s2=2000, b1=0.1, b2=0.1, I12=10000, I21=10000, m=0.9, c1=50, c2=150, C1=50, C2=50, bp=1, Kp=300, a=0.003)
results <- data.frame(dose=seq(50,70,1), T2=0)
for (i in 1:nrow(results)) {
litT2 <- 0
bigT2 <- totalT
midT2 <- totalT/2
print(i)
P1 = ode(y=c(T1=totalT-litT2,T2=litT2,P=results$dose[i]), times=seq(0,100), full_model,params)[101,4]
P2 = ode(y=c(T1=totalT-midT2,T2=midT2,P=results$dose[i]), times=seq(0,100), full_model,params)[101,4]
P3 = ode(y=c(T1=totalT-bigT2,T2=bigT2,P=results$dose[i]), times=seq(0,100), full_model,params)[101,4]
if(sum(round(c(P1,P2,P3)))==0)
results[i,"T2"] <- 0
else if(all(c(P1,P2,P3) > 10))
results[i,"T2"] <- results$totalT[i]
else {
while(bigT2-midT2 > 1) {
if(round(abs(P1-P2)) > round(abs(P2-P3))) { ## acute to chronic switch happens in the first interval
## litT2 stays the same and bigT2 becomes midT2 =>
## P1 remains the same and P3 becomes P2
bigT2 <- midT2
P3 <- P2
## midT2 is halfway between litT2 and bigT2
midT2 <- (bigT2+litT2)/2
P2 <- ode(y=c(T1=totalT-midT2,T2=midT2,P=results$dose[i]), times=seq(0,100), full_model,params)[101,4]
} else {
## bigT2 stays the same and litT2 becomes midT2 =>
## P3 remains the same and P1 becomes P2
litT2 <- midT2
P1 <- P2
## midT2 is halfway between litT2 and bigT2
midT2 <- (bigT2+litT2)/2
P2 <- ode(y=c(T1=totalT-midT2,T2=midT2,P=results$dose[i]), times=seq(0,100), full_model,params)[101,4]
}
}
results[i,"T2"] <- midT2
}
}
results
params = c(S1=1000, S2=1000, s1=2000, s2=2000, b1=0.1, b2=0.1, I12=10000, I21=10000, m=0.9, c1=50, c2=150, C1=50, C2=50, bp=1, Kp=300, a=0.003)
out60.1 <- ode(y=c(T1=600,T2=600,P=60), times=seq(0,40,0.1), full_model, params)
tail(out60.1)
out60.1 <- ode(y=c(T1=620,T2=580,P=60), times=seq(0,40,0.1), full_model, params)
out60.1
out60.1 <- ode(y=c(T1=550,T2=650,P=60), times=seq(0,40,0.1), full_model, params)
tail(out60.2)
tail(out60.1)
params = c(S1=1000, S2=1000, s1=2000, s2=2000, b1=0.1, b2=0.1, I12=10000, I21=10000, m=0.9, c1=50, c2=150, C1=50, C2=50, bp=1, Kp=300, a=0.003)
out60.1 <- ode(y=c(T1=550,T2=650,P=60), times=seq(0,40,0.1), full_model, params)
## 60 but spread out - no clearance
d <- 10
eventdat <- data.frame(var=c("P"),
time=seq(1:5),
value=c(d),
method=c("add"))
out60.2 <- ode(y=c(T1=550,T2=650,P=d), times=seq(0,40,0.1), full_model, params, events=list(data=eventdat))
tail(out60.2)
d <- 10
eventdat <- data.frame(var=c("P"),
time=seq(2,10,2),
value=c(d),
method=c("add"))
out60.2 <- ode(y=c(T1=550,T2=650,P=d), times=seq(0,40,0.1), full_model, params, events=list(data=eventdat))
out60.2
tail(out60.2)
out60.1 <- ode(y=c(T1=580,T2=620,P=60), times=seq(0,40,0.1), full_model, params)
tail(out60.1)
d <- 10
eventdat <- data.frame(var=c("P"),
time=seq(2,10,2),
value=c(d),
method=c("add"))
out60.2 <- ode(y=c(T1=580,T2=620,P=d), times=seq(0,40,0.1), full_model, params, events=list(data=eventdat))
out60.2
tail(out60.2)
par(mfrow=c(1,3), mar=c(2.5,5,1,1), oma=rep(0.5,4))
plot(out60.1[1:101,c(1,4)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,200), cex.axis=1.5)
mtext(side=2, line=3.5, "Parasite biomass", cex=1.5)
lines(out60.2[1:101,c(1,4)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,4)], lwd=3, col=gray(0.1))
plot(out60.1[1:101,c(1,3)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,1600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th2 response", cex=1.5)
lines(out60.2[1:101,c(1,3)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,3)], lwd=3, col=gray(0.1))
plot(out60.1[1:101,c(1,2)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,1600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th1 response", cex=1.5)
lines(out60.2[1:101,c(1,2)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,2)], lwd=3, col=gray(0.1))
par(mfrow=c(1,3), mar=c(2.5,5,1,1), oma=rep(0.5,4))
plot(out60.1[1:201,c(1,4)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,100), cex.axis=1.5)
mtext(side=2, line=3.5, "Parasite biomass", cex=1.5)
lines(out60.2[1:201,c(1,4)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,4)], lwd=3, col=gray(0.1))
plot(out60.1[1:201,c(1,3)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,1000), cex.axis=1.5)
mtext(side=2, line=3.5, "Th2 response", cex=1.5)
lines(out60.2[1:201,c(1,3)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,3)], lwd=3, col=gray(0.1))
plot(out60.1[1:201,c(1,2)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th1 response", cex=1.5)
lines(out60.2[1:201,c(1,2)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,2)], lwd=3, col=gray(0.1))
params = c(S1=1000, S2=1000, s1=2000, s2=2000, b1=0.1, b2=0.1, I12=10000, I21=10000, m=0.9, c1=50, c2=150, C1=50, C2=50, bp=1, Kp=300, a=0.003)
out60.1 <- ode(y=c(T1=580,T2=620,P=60), times=seq(0,15,0.1), full_model, params)
## 60 but spread out - no clearance
d <- 10
eventdat <- data.frame(var=c("P"),
time=seq(2,10,2),
value=c(d),
method=c("add"))
out60.2 <- ode(y=c(T1=580,T2=620,P=d), times=seq(0,15,0.1), full_model, params, events=list(data=eventdat))
par(mfrow=c(1,3), mar=c(2.5,5,1,1), oma=rep(0.5,4))
plot(out60.1[,c(1,4)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,100), cex.axis=1.5)
mtext(side=2, line=3.5, "Parasite biomass", cex=1.5)
lines(out60.2[,c(1,4)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,4)], lwd=3, col=gray(0.1))
plot(out60.1[,c(1,3)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,1000), cex.axis=1.5)
mtext(side=2, line=3.5, "Th2 response", cex=1.5)
lines(out60.2[,c(1,3)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,3)], lwd=3, col=gray(0.1))
plot(out60.1[,c(1,2)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th1 response", cex=1.5)
lines(out60.2[,c(1,2)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,2)], lwd=3, col=gray(0.1))
par(mfrow=c(1,3), mar=c(2.5,5,1,1), oma=rep(0.5,4))
plot(out60.1[,c(1,4)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,100), cex.axis=1.5)
mtext(side=2, line=3.5, "Parasite biomass", cex=1.5)
lines(out60.2[,c(1,4)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,4)], lwd=3, col=gray(0.1))
plot(out60.1[,c(1,3)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,1600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th2 response", cex=1.5)
lines(out60.2[,c(1,3)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,3)], lwd=3, col=gray(0.1))
plot(out60.1[,c(1,2)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th1 response", cex=1.5)
lines(out60.2[,c(1,2)], lwd=3, col=gray(0.4))
#lines(out60.3[,c(1,2)], lwd=3, col=gray(0.1))
library(tidyverse)
## Read in all of the data on Covid-19 at the state level
x <- read.csv(url("https://covidtracking.com/api/v1/states/daily.csv"))
## Read in the population sizes of every state to make appropriate per 100k calculations
y <- read.csv(url("https://www2.census.gov/programs-surveys/popest/datasets/2010-2019/state/detail/SCPRC-EST2019-18+POP-RES.csv"))
## add abbreviations to census data
y$state <- c("USA","AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ",'NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY','PR')
## read in GDP data
read.csv("~/Downloads/download.csv") %>%
subset(., LineCode==1) %>%
mutate(., NAME=GeoName, GDP=X2019) %>%
merge(y, .) -> y
## merge the two datasets into a single dataset
merge(x,y,by='state') -> z
z$GDP <- as.numeric(as.character(z$GDP))
## calculate statistics
mutate(z,
date=date %>% as.character %>% as.Date(., format="%Y%m%d"),
totTests=positive+negative,
infectedCurrently=ifelse(!is.na(recovered),positive-recovered,positive),
fracHospitalized=hospitalizedCurrently/infectedCurrently,
totCaseFatality=death/positive*100,
hospCaseFatality=death/hospitalized*100,
casesPer100k=positive/POPESTIMATE2019*100000,
testsPer100k=totTests/POPESTIMATE2019*100000,
deathsPer100k=death/POPESTIMATE2019*100000,
newCasesPer100k=positiveIncrease/POPESTIMATE2019*100000,
newTestsPer100k=totalTestResultsIncrease/POPESTIMATE2019*100000,
newDeathsPer100k=deathIncrease/POPESTIMATE2019*100000,
testPosRate=positive/totTests) -> z
## Drop some territories where I don't have population data
z[!(z$state %in% (sapply(levels(z$state), function(s) with(subset(z, state==s),all(is.na(casesPer100k)))) %>% which %>% names)),] -> z
z$state <- factor(z$state)
levels(z$state)
## relationship between gdp and testing
with(subset(z, date==max(date)), plot(GDP, testsPer100k))
with(subset(z, date==max(date)), plot(GDP, casesPer100k))
## n-day moving averages over the past X days for daily cases, daily tests, fraction of positive tests, and daily deaths
X <- 35
n <- 7
lapply(seq(max(z$date)-X, max(z$date), 1),
function(d)
subset(z, date > d-n & date <= d) %>% group_by(state) %>% summarise(date=d, casesPer100k=mean(newCasesPer100k,na.rm=T), testsPer100k=mean(newTestsPer100k,na.rm=T), testPosRate=mean(positiveIncrease/totalTestResultsIncrease,na.rm=T), deathsPer100k=mean(newDeathsPer100k,na.rm=T))
) %>% do.call("rbind.data.frame",.) -> a
## use colors, linewidths, and level ordering to highlight specific states
specifyState <- c("NE") ## Change this line to focus on different states of interest
stateColors <- data.frame(state=levels(a$state),
stateColor=1)
stateColors$stateColor[stateColors$state%in%specifyState] <- 2.5
## these two lines make the chosen states the last to be plotted
for (i in specifyState) {a$state <- relevel(a$state, i); z$state <- relevel(z$state, i)}
a$state <- factor(a$state, levels=rev(levels(a$state)))
z$state <- factor(z$state, levels=rev(levels(z$state)))
head(a)
subset(a, state=="NY")
subset(z, state=="NY")
with(subset(z, state=="NY"), plot(date, positive, type='l')
)
subset(z,state=="NY")[,c(date,positive)]
subset(z,state=="NY")[,c("date","positive")]
with(subset(z, state=="NY"), plot(date, positive))
?order
arrange(with(subset(z, state=="NY"), "date")
)
arrange(with(subset(z, state=="NY")), "date")
arrange(with(subset(z, state=="NY")), date)
arrange(subset(z, state=="NY"), date)
arrange(subset(z, state=="NY"), date) %>% with(., plot(date, positive, type='l'))
arrange(subset(z, state=="NY" & date < "04/25/2020"), date) %>% with(., plot(date, positive, type='l'))
arrange(subset(z, state=="NY" & date < "2020-04-25"), date) %>% with(., plot(date, positive, type='l'))
arrange(subset(z, state=="NY" & date < "2020-04-01"), date) %>% with(., plot(date, positive, type='l'))
arrange(subset(z, state=="NY" & date < "2020-04-01" & date > "2020-03-14"), date) %>% with(., plot(date, positive, type='l'))
arrange(subset(z, state=="NY" & date < "2020-04-01" & date > "2020-03-01"), date) %>% with(., plot(date, positive, type='l'))
arrange(subset(z, state=="NY" & date < "2020-04-01" & date > "2020-03-01"), date) %>% with(., plot(date, positive, type='l', xlab="", ylab="SARS-CoV-2 cases"))
par(mar=c(3,5,0.5,0.5), oma=rep(0,4))
arrange(subset(z, state=="NY" & date < "2020-04-01" & date > "2020-03-01"), date) %>% with(., plot(date, positive, type='l', xlab="", ylab="SARS-CoV-2 cases"))
arrange(subset(z, state=="NY" & date < "2020-04-01" & date > "2020-03-01"), date) %>% with(., plot(date, positive, type='l', xlab="", ylab="SARS-CoV-2 cases", lwd=3))
arrange(subset(z, state=="NY" & date < "2020-04-01" & date > "2020-03-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases", pch=21, bg=1))
subset(z, state=="NY" & date < "2020-04-01" & date > "2020-03-01") -> a
logCases = log(a$positive)
day = as.numeric(a$date)
day
day = as.numeric(a$date) - min(as.numeric(a$date))
day
lm(logCases~day)
lm(logCases~day) %>% summary
exp(2.9808)
day
day %>% max
exp(2.9808)*exp(.3377 * seq(0,27))
expectCases = exp(2.9808)*exp(.3377 * seq(0,27))
a
arrange(subset(z, state=="NY" & date < "2020-04-01" & date > "2020-03-01"), date) -> d
d$date
d$positive
expectCases
lm(logCases~day) %>% summary
2.9808 + 0.3377*27
exp(2.9808 + 0.3377*27)
logCases
day
2.9808+0.3377*27
d
d$expectPos = expectCases
lines(d$date, d$expectPos)
arrange(subset(z, state=="NY" & date < "2020-04-01" & date > "2020-03-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases", pch=21, bg=1))
arrange(subset(z, state=="NE" & date > "2020-09-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases", pch=21, bg=1))
arrange(subset(z, state=="NE" & date > "2020-08-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases", pch=21, bg=1))
arrange(subset(z, state=="NE" & date > "2020-07-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases", pch=21, bg=1))
arrange(subset(z, state=="NE" & date > "2020-06-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases", pch=21, bg=1))
4
arrange(subset(z, state=="NE" & date > "2020-04-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases", pch=21, bg=1))
arrange(subset(z, state=="NE" & date > "2020-06-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases", pch=21, bg=1))
arrange(subset(z, state=="NE" & date > "2020-06-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases", pch=21, bg=1)) -> f
f
arrange(subset(z, state=="NE" & date > "2020-06-01"), date) -> f
lm(log(f$cases)~f$date) %>% summary
lm(log(f$cases)~f$date) %>% summary
logCases = log(f$positive)
day = f$date
lm(logCases~day) %>% summary
lm(logCases~day) %>% predict(., day=f$date)
lm(logCases~day) %>% predict(., day=f$date) %>% exp()
lm(logCases~day) %>% predict(., day=f$date) %>% exp()
lines(f$date, lm(logCases~day) %>% predict(., day=f$date) %>% exp(), type='l', col=2)
arrange(subset(z, state=="NE" & date > "2020-06-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases"))
lines(f$date, lm(logCases~day) %>% predict(., day=f$date) %>% exp(), type='l', col=2)
lines(f$date, lm(logCases~day) %>% predict(., day=f$date) %>% exp(), type='l', col=2, lwd=3)
arrange(subset(z, state=="NE" & date > "2020-08-01"), date) -> f
logCases = log(f$positive)
day = f$date
lm(logCases~day) %>% summary()
lm(logCases~day) %>% predict(., day=f$date)
lm(logCases~day) %>% predict(., day=f$date) %>% exp()
arrange(subset(z, state=="NE" & date > "2020-08-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases"))
lines(f$date, lm(logCases~day) %>% predict(., day=f$date) %>% exp(), type='l', col=2, lwd=3)
arrange(subset(z, state=="NE" & date > "2020-09-01"), date) -> f
logCases = log(f$positive)
day = f$date
lm(logCases~day) %>% predict(., day=f$date) %>% exp()
arrange(subset(z, state=="NE" & date > "2020-08-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases in Nebraska"))
arrange(subset(z, state=="NE" & date > "2020-09-01"), date) %>% with(., plot(date, positive, xlab="", ylab="SARS-CoV-2 cases in Nebraska"))
lines(f$date, lm(logCases~day) %>% predict(., day=f$date) %>% exp(), type='l', col=2, lwd=3)
library(mvtnorm)
par(mfrow=c(2,2), mar=c(4,4,1,1), oma=rep(0.25,4))
plot(rmvnorm(100, c(0,0), matrix(c(1,-1,-1,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n')
par(mfrow=c(2,2), mar=c(4,4,1,1), oma=rep(0.25,4))
plot(rmvnorm(100, c(0,0), matrix(c(1,-0.5,-0.5,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n')
par(mfrow=c(2,2), mar=c(4,4,1,1), oma=rep(0.25,4))
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.5,-0.5,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n')
par(mfrow=c(2,2), mar=c(4,4,1,1), oma=rep(0.25,4))
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.7,-0.7,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n')
par(mfrow=c(2,2), mar=c(4,4,1,1), oma=rep(0.25,4))
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.7,-0.7,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab="Egg size", ylab="Egg number")
par(mfrow=c(2,2), mar=c(2,2,1,1), oma=rep(0.25,4))
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.7,-0.7,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Egg Size", line=2)
par(mfrow=c(2,2), mar=c(2,2,1,1), oma=rep(0.25,4))
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Egg size", line=1.5)
mtext(side=2, "Egg number", line=1.5)
par(mfrow=c(2,2), mar=c(2,2,1,1), oma=rep(0.25,4))
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Egg size", line=1)
mtext(side=2, "Egg number", line=1)
par(mfrow=c(2,2), mar=c(2,2,1,1), oma=rep(0.25,4))
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Offspring body size", line=1)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care per offspring", line=1)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care per offspring", line=1)
mtext(side=2, "Offspring size", line=1)
par(mfrow=c(2,2), mar=c(2,2,1,1), oma=rep(0.25,4))
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Offspring body size", line=1)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=0.25)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=0.25)
mtext(side=2, "Offspring size", line=1)
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care per offspring", line=1)
mtext(side=2, "Offspring number", line=1)
par(mfrow=c(2,2), mar=c(2,2,1,1), oma=rep(0.25,4))
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Offspring body size", line=1)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring size", line=1)
plot(rmvnorm(20, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care per offspring", line=1)
mtext(side=2, "Offspring number", line=1)
par(mfrow=c(2,2), mar=c(2,2,1,1), oma=rep(0.25,4))
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Offspring body size", line=1)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring size", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care per offspring", line=1)
mtext(side=2, "Offspring number", line=1)
par(mfrow=c(2,2), mar=c(2,2,1,1), oma=rep(0.25,4))
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Offspring body size", line=1)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring size", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,0.75,0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care per offspring", line=1)
mtext(side=2, "Offspring number", line=1)
par(mfrow=c(2,2), mar=c(3,3,1,1), oma=rep(0.25,4))
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Offspring body size", line=1)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring size", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,0.75,0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=1)
mtext(side=2, "Offspring number", line=1)
par(mfrow=c(2,2), mar=c(3,3,1,1), oma=rep(0.25,4))
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Offspring body size", line=1)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring number", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring size", line=1)
plot(rmvnorm(40, c(0,0), matrix(c(1,0.75,0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring number", line=1)
par(mfrow=c(2,2), mar=c(3,3,1,1), oma=rep(0.25,4))
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Offspring body size", line=1)
mtext(side=2, "Offspring number", line=1)
legend(x='topright', "Figure A", bty='n')
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring number", line=1)
legend(x='topright', "Figure B", bty='n')
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring size", line=1)
legend(x='topright', "Figure C", bty='n')
plot(rmvnorm(40, c(0,0), matrix(c(1,0.75,0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring number", line=1)
legend(x='topright', "Figure D", bty='n')
png(filename="~/Desktop/trade-offs.png", height=5, width=5, units='in', res=400)
par(mfrow=c(2,2), mar=c(3,3,1,1), oma=rep(0.25,4))
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Offspring body size", line=1)
mtext(side=2, "Offspring number", line=1)
legend(x='topright', "Figure A", bty='n')
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring number", line=1)
legend(x='topright', "Figure B", bty='n')
plot(rmvnorm(40, c(0,0), matrix(c(1,-0.75,-0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring size", line=1)
legend(x='topright', "Figure C", bty='n')
plot(rmvnorm(40, c(0,0), matrix(c(1,0.75,0.75,1), nrow=2, byrow=TRUE)), xaxt='n', yaxt='n', xlab='', ylab='')
mtext(side=1, "Parental care\nper offspring", line=2)
mtext(side=2, "Offspring number", line=1)
legend(x='topright', "Figure D", bty='n')
dev.off()
knitr::opts_chunk$set(echo = TRUE,
dev=c('png','tiff'),
fig.path='figures/')
V <- kronecker(V2,V1)
setwd("~/gems/logistic")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/gems/logistic")
source("logistic_GEM.R")
library(tidyverse)
library(parallel)
bmax_seq <- seq(0.5,5.5,0.5)
s <- 1/6
bs <- ds <- 0.025
N0_seq <- sapply(bmax_seq, function(b) (b-s*b^2)/(bs+ds))
output1 <- vector(mode='list', length=length(bmax_seq))
tin = Sys.time()
set.seed(1343421)
seeds <- floor(runif(100, 1, 1e5))
mclapply(seeds,
function(seed) logistic_GEM(seed=seed, dt=1, tmax=1000, N0=N0_seq[i], traitmean=bmax_seq[i], traitcv=0.3, h2=0.75, bs=bs, ds=ds, slope=s),
mc.cores=8
) -> out
i = 1
i
output1
set.seed(1343421)
seeds <- floor(runif(100, 1, 1e5))
mclapply(seeds,
function(seed) logistic_GEM(seed=seed, dt=1, tmax=1000, N0=N0_seq[i], traitmean=bmax_seq[i], traitcv=0.3, h2=0.75, bs=bs, ds=ds, slope=s),
mc.cores=8
) -> out
output1[[i]] <- data.frame(time=0:1000,
N=lapply(out, function(l) lapply(l$traits, function(j) ifelse(length(j)>0,length(j),NA)) %>% unlist) %>% do.call("cbind.data.frame",.) %>% apply(.,1,function(r) median(r,na.rm=TRUE)),
b=lapply(out, function(l) lapply(l$traits, function(t) mean(t,na.rm=TRUE)) %>% unlist) %>% do.call("cbind.data.frame",.) %>% apply(.,1,function(r) median(r,na.rm=TRUE)),
init=paste("b0=",signif(bmax_seq[i],3),"\n","N0=",signif(N0_seq[i],3),sep="")) %>%
mutate(.,
QGselGrad=1-2*s*b,
LRSselGrad=(ds*N-b*(b-2*bs*N)*s)/(ds*N+b^2*s)^2)
## create a dataframe storing the results
output1[[i]] <- data.frame(time=0:1000,
N=lapply(out, function(l) lapply(l$traits, function(j) ifelse(length(j)>0,length(j),NA)) %>% unlist) %>% do.call("cbind.data.frame",.) %>% apply(.,1,function(r) median(r,na.rm=TRUE)),
b=lapply(out, function(l) lapply(l$traits, function(t) mean(t,na.rm=TRUE)) %>% unlist) %>% do.call("cbind.data.frame",.) %>% apply(.,1,function(r) median(r,na.rm=TRUE)),
init=paste("b0=",signif(bmax_seq[i],3),"\n","N0=",signif(N0_seq[i],3),sep="")) %>%
mutate(.,
QGselGrad=1-2*s*b,
LRSselGrad=(ds*N-b*(b-2*bs*N)*s)/(ds*N+b^2*s)^2)
output1[[1]]]
output1[[1]]
output1[[1]] %>% tail
